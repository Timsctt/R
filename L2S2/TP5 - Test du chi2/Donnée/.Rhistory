datacr2
datacr3<-scale(data,center = T,scale=etCol)
datacr3
#6
cov(data)
cor(data)
cov(datacr)
3/4*cov(datacr)
M2<-matrix(c(5,2,1,0,2,5,0,-1,1,0,5,-2,0,-1,-2,5),ncol = 4,)
M2
Data<-data.frame(M2)
N<-nrow(Data)
MoyCol<-colMeans(Data)
VarCol<-colMeans(Data^2)-colMeans(Data)^2
etCol<-sqrt(VarCol)
Datac<-Data-(matrix(rep(MoyCol,4),byrow = T, nrow = N))
Datac
#matrice centree
Datacr<-Datac/((c(1,1,1,1))%*%t(etCol))
Datacr
3/4*cov(datacr)
3/4*cov(Datacr)
Mcor<-3/4*cov(Datacr)
Mcor
eigen(Mcor)
M<-matrix(c(1,1,2,0,0,2,2,0,0,0,2,2),ncol = 3,)
#2
colSums(M)
# Fait la somme des colonnes
t(M)
# Transpose la matrice
M*M
#Multiplication terme a terme
M*t(M)
# Ne peut pas se faire car la taille ne correspond pas
M%*%t(M)
# Multiplie les matrices entre elles, on entour * par % pour avoir une multiplication
# matriciel
M%*%M
# Impossible, mauvaise dimension
M/M
#
M+2*M
#
M-M
# Soustraie la matrice
#3
data<-data.frame(M)
colnames(data)<-c("V1","V2","V3")
rownames(data)<-c("A","B","C","D")
#4
MoyCol<-colMeans(data)
VarCol<-colMeans(data^2)-colMeans(data)^2
etCol<-sqrt(VarCol)
#sd fait l'ecart type corrige = standart deviasion
#5
n<-nrow(data)
n
datac<-data-(matrix(rep(MoyCol,4),byrow = T, nrow = n))
datac
#Matrice qui a etait centree
datacr<-datac/((c(1,1,1,1))%*%t(etCol))
datacr
#Matrice centre reduit, reduit quand on a soustrait l'ecart type.
datacr2<-scale(data,center=T,scale=T)
datacr2
datacr3<-scale(data,center = T,scale=etCol)
datacr3
#6
cov(data)
cor(data)
cov(datacr)
3/4*cov(datacr)
#vrai matrice des covariance, matrice des corelation,
#3/4 car (n - 1) / n
#Elles ne sont pas pareille car c'est aussi des valeurs corrige.
#7
Mcor<-3/4*cov(datacr)
Mcor
eigen(Mcor)
#9
P<-eigen(Mcor)$vectors
P
M2<-matrix(c(5,2,1,0,2,5,0,-1,1,0,5,-2,0,-1,-2,5),ncol = 4,)
M2
Data<-data.frame(M2)
N<-nrow(Data)
MoyCol<-colMeans(Data)
VarCol<-colMeans(Data^2)-colMeans(Data)^2
etCol<-sqrt(VarCol)
Datac<-Data-(matrix(rep(MoyCol,4),byrow = T, nrow = N))
Datac
#matrice centree
Datacr<-Datac/((c(1,1,1,1))%*%t(etCol))
Datacr
#matrice centree reduite
3/4*cov(Datacr)
Mcor<-3/4*cov(Datacr)
Mcor
eigen(Mcor)
eigen(Mcor)$values
det(eigen(Mcor)$values)
det(eigen(Mcor)$vectors)
P<-eigen(Mcor)$vectors
det(P)
solve(P)%*%P
t(P)%*%P
vp<-eigen(Mcor)$values
IneRel<-vp/sum(vp)
vp
IneRel
t(P)%*%P
P*vp*P-1
solve(P)%*%P
P-1<-solve(P)%*%P
P-1<-solve(P)%*%P
P-1 <-solve(P)%*%P
M2<-matrix(c(5,2,1,0,2,5,0,-1,1,0,5,-2,0,-1,-2,5),ncol = 4,)
M2
Data<-data.frame(M2)
N<-nrow(Data)
MoyCol<-colMeans(Data)
VarCol<-colMeans(Data^2)-colMeans(Data)^2
etCol<-sqrt(VarCol)
Datac<-Data-(matrix(rep(MoyCol,4),byrow = T, nrow = N))
Datac
#matrice centree
Datacr<-Datac/((c(1,1,1,1))%*%t(etCol))
Datacr
#matrice centree reduite
3/4*cov(Datacr)
Mcor<-3/4*cov(Datacr)
Mcor
eigen(Mcor)
vp<-eigen(Mcor)$values
#Les valeurs propres sont donc donnee par le vecteurs vp
P<-eigen(Mcor)$vectors
det(P)
P-1<-solve(P)%*%P
P1<-solve(P)%*%P
#On note les valeurs avec une tres forte puissance (-16 et -17) qui sont donc tres
#proche de 0
trans<-t(P)%*%P
P*vp*P1
t(M2)
M2
vp
P
solve(P)
P*colSums(P)*P1
Datacr
3/4*cov(Datacr)
Mcor<-3/4*cov(Datacr)
Mcor
eigen(Mcor)
M2
eigen(Mcor)
P1<-solve(P)
P
P1
vp
Mcor
M2<-matrix(c(5,2,1,0,2,5,0,-1,1,0,5,-2,0,-1,-2,5),ncol = 4,)
M2
Data<-data.frame(M2)
N<-nrow(Data)
MoyCol<-colMeans(Data)
VarCol<-colMeans(Data^2)-colMeans(Data)^2
etCol<-sqrt(VarCol)
Datac<-Data-(matrix(rep(MoyCol,4),byrow = T, nrow = N))
Datac
#matrice centree
Datacr<-Datac/((c(1,1,1,1))%*%t(etCol))
Datacr
#matrice centree reduite
Mcor<-3/4*cov(Datacr)
Mcor
eigen(Mcor)
vp<-eigen(Mcor)$values
#Les valeurs propres sont donc donnee par le vecteurs vp
P<-eigen(Mcor)$vectors
det(P)
P1<-solve(P)
#On note les valeurs avec une tres forte puissance (-16 et -17) qui sont donc tres
#proche de 0
trans<-t(P)%*%P
P**P1
diag(M2)
diag(c(5,2,1,0,2,5,0,-1,1,0,5,-2,0,-1,-2,5),ncol = 4,)
diag(c(5,2,1,0,2,5,0,-1,1,0,5,-2,0,-1,-2,5))
diag(c(5,2,1,0,2,5,0,-1,1,0,5,-2,0,-1,-2,5),ncol = 4,)
diag(c(5,2,1,0,2,5,0,-1,1,0,5,-2,0,-1,-2,5),ncol = 4, nrow = 4)
DM2<-diag(c(5,2,1,0,2,5,0,-1,1,0,5,-2,0,-1,-2,5),ncol = 4, nrow = 4)
P*DM2*P1
P
P1
DM2
P%*%DM2%*%P1
diag(eigen(m)$values)
diag(eigen(M2)$values)
d<-diag(eigen(M2)$values)
P%*%d%*%P1
M2<-matrix(c(5,2,1,0,2,5,0,-1,1,0,5,-2,0,-1,-2,5),ncol = 4,)
M2
Data<-data.frame(M2)
N<-nrow(Data)
MoyCol<-colMeans(Data)
VarCol<-colMeans(Data^2)-colMeans(Data)^2
etCol<-sqrt(VarCol)
Datac<-Data-(matrix(rep(MoyCol,4),byrow = T, nrow = N))
Datac
#matrice centree
Datacr<-Datac/((c(1,1,1,1))%*%t(etCol))
Datacr
#matrice centree reduite
eigen(M2)
#matrice centree reduite
Mcor<-3/4*cov(Datacr)
Mcor
eigen(Mcor)
vp<-eigen(Mcor)$values
#Les valeurs propres sont donc donnee par le vecteurs vp
P<-eigen(Mcor)$vectors
det(P)
P1<-solve(P)
#On note les valeurs avec une tres forte puissance (-16 et -17) qui sont donc tres
#proche de 0
d<-diag(eigen(M2)$values)
P%*%d%*%P1
d<-diag(eigen(Mcor)$values)
P%*%d%*%P1
d<-diag(eigen(M2)$values)
P%*%d%*%P1
m<-2
s<-1
n<-100
N<-200
X<-matrix(rnorm(n*N,m,s)n,N)
X<-matrix(rnorm(n*N,m,s)n,N))
X<-matrix(rnorm(n*N,m,s)n,N)
X<-matrix(rnorm(n*N,m,s),n,N)
Xbar<-colSums/n
Xbar<-colSums(X/n)
plot(Xbar, 1:N, xlim=c(1,3))
Ibinf<-Xbar-1.96*s/sqrt(n)
Ibinf
Xbar
X
Xbar
Xbar<-(colSums(X))/n
Xbar
X
Xbar<-colSums(X/n)
Xbar
plot(Xbar, 1:N, xlim=c(1,3))
#3
Ibinf<-Xbar-1.96*s/sqrt(n)
Ibinf
m<-2
s<-1
n<-100
N<-200
X<-matrix(rnorm(n*N,m,s),n,N)
X
#2
Xbar<-colSums(X/n)
Xbar
Xbar
plot(Xbar, 1:N, xlim=c(1,3))
#3
Ibinf<-Xbar-1.96*s/sqrt(n)
Ibinf
Ibinf
Ibsup
Ibsup<-Xbar+1.96*s/sqrt(n)
Ibsup
sum((m>Ibinf)&(m<Ibsup))
sum((m>Ibinf)&(m<Ibsup))/N
segments(Ibinf,1:N,Ibsup,1:N)
abline(v=2,col="red")
abline(v=2,col="red",xlab="moyenne",ylab="effectif")
abline(v=2,col="red",xlab="moyenne",ylab="effectif")
segments(Ibinf,1:N,Ibsup,1:N,,xlab="moyenne",ylab="effectif")
abline(v=2,col="red")
abline(v=2,col="red")
help(qnorm)
segments(Ibinf,1:N,Ibsup,1:N,conf.level = 0.90)
qnorm(0.975)
a<-0.05
qnorm(1-a/2)
Ibsup2<-Xbar+(1-a)*s/sqrt(n)
segments(Ibinf,1:N,Ibsup,1:N,conf.level = 0.90)
a<-0.1
Ibsup2<-Xbar+qnorm(1-a/2)*s/sqrt(n)
Ibinf2<-Xbar-qnorm(1-a/2)*s/sqrt(n)
segments(Ibinf,1:N,Ibsup,1:N)
segments(Ibinf2,1:N,Ibsup2,1:N)
n<-4000
n<-4000
Ibsup<-Xbar+qnorm(1-a/2)*s/sqrt(n)
Ibinf<-Xbar-qnorm(1-a/2)*s/sqrt(n)
segments(Ibinf,1:N,Ibsup,1:N)
plot(Xbar, 1:N, xlim=c(1,3))
segments(Ibinf,1:N,Ibsup,1:N)
n<-30
Ibsup<-Xbar+qnorm(1-a/2)*s/sqrt(n)
Ibinf<-Xbar-qnorm(1-a/2)*s/sqrt(n)
segments(Ibinf,1:N,Ibsup,1:N)
n<-5000000
Ibsup<-Xbar+qnorm(1-a/2)*s/sqrt(n)
Ibinf<-Xbar-qnorm(1-a/2)*s/sqrt(n)
segments(Ibinf,1:N,Ibsup,1:N)
n<-4000
Ibsup<-Xbar+qnorm(1-a/2)*s/sqrt(n)
Ibinf<-Xbar-qnorm(1-a/2)*s/sqrt(n)
segments(Ibinf,1:N,Ibsup,1:N)
prix1<-c(42.7,42.6,43,43.5,42.8,42.1,43.6,42.9,41.6,42.8,42.9,43.2,42.6,43.1,43.1)
hist(prix1)
boxplot(prix1)
hist(prix1,col="red")
boxplot(prix1)
boxplot(prix1,col="orange")
shapiro.test(prix1)
help("shapiro.test")
t.test(prix1, mu=43, alternative="two.sided")
test$p.value
test$conf.int
test$estimate
test$null.value
test$alternative
test$method
test<-t.test(prix1, mu=43, alternative="two.sided")
test$p.value
test$conf.int
test$estimate
test$null.value
test$alternative
test$method
test<-t.test(prix1, mu=43, alternative = "two.sided", conf.level=0.9)$conf.int
prix2<-c(40.9,43.4,42.2,41.6,42.9,40.8,42.5,41.6,40.4,42.5,41.1,41.8,43.3,43.4,43.4)
boxplot(prix1,prix2)
var.test(prix1,prix2)
t.test(prix1,prix2, alternative="greater",var.equal=FALSE)
boxplot(prix1,prix2,names("prix1","prix2"))
boxplot(prix1,prix2,names="prix1","prix2")
boxplot(prix1,prix2,names=("prix1","prix2")
boxplot(prix1,prix2)
boxplot(prix1,prix2)
var.test(prix1,prix2)
t.test(prix1,prix2, alternative="greater",var.equal=FALSE)
shapiro.test(prix1)
iris
df<-iris
df
View(df)
attach(df)
qnorm(0.92)
attach(df)
df<-iris
a<-0.08
Ibinf<-Xbar-qnorm(1-a/2)*s/sqrt(n)
Ibsup<-Xbar+qnorm(1-a/2)*s/sqrt(n)
View(df)
sum[df$Species(versicolor)]
sum[df$Species,versicolor]
sum[df$Species,versicolor]
prop.test(18,64,0.15)
setwd("~/Documents/Cours/L2/Semestre 2 /Logiciel R/TP5/Donnée")
tab1<-matrix(c(592,544,119,97,849,677,504,451,36,14),ncol=5)
rownames(tab1)<-c("Garcon","Fille")
colnames(tab1)<-c("Blond","Roux","Chatain","Brun","Noir")
tab1
par(mfrow=c(2,1))
couleur<-c("Gold","OrangeRed","Goldenrod","Brown","Black")
barplot(tab1[1,],main="Garcon",col=couleur)
barplot(tab1[2,],main="Filles",col = couleur)
tab<-matrix(c(592,544,119,97,849,677,504,451,36,14),ncol=5)
rownames(tab)<-c("Garcon","Fille")
colnames(tab)<-c("Blond","Roux","Chatain","Brun","Noir")
tab
par(mfrow=c(2,1))
couleur<-c("Gold","OrangeRed","Goldenrod","Brown","Black")
barplot(tab[1,],main="Garcon",col=couleur)
barplot(tab[2,],main="Fille",col = couleur)
barplot(tab[1,],main="Garcon",col=couleur)
barplot(tab[2,],main="Fille",col = couleur)
barplot(tab[1,],main="Garçon",col=couleur)
barplot(tab[2,],main="Fille",col = couleur)
tab<-matrix(c(592,544,119,97,849,677,504,451,36,14),ncol=5)
rownames(tab)<-c("Garcon","Fille")
colnames(tab)<-c("Blond","Roux","Chatain","Brun","Noir")
tab
par(mfrow=c(2,1))
couleur<-c("Gold","OrangeRed","Goldenrod","Brown","Black")
barplot(tab[1,],main="Garçon",col=couleur)
barplot(tab[2,],main="Fille",col = couleur)
chisq.test(tab)
barplot(tab[2,],main="Fille",col=couleur)
resultat<-chisq.test(tab); resultat$expected
contri<-resultat$residuals
contri
contri<-resultat$residuals; contri
(contri[1,]+contri[2,])/resultat$statistic
tab2<-tab[,-5]
tab2
barplot(tab[1,],main="Garçon",col=couleur)
barplot(tab[2,],main="Fille",col=couleur)
barplot(tab[1,])
barplot(tab)
barplot(tab[1,],main="Garçon",col=couleur)
barplot(tab[2,],main="Fille",col=couleur)
par(mfrow=c(2,1))
couleur<-c("Gold","OrangeRed","Goldenrod","Brown","Black")
barplot(tab[1,],main="Garçon",col=couleur)
barplot(tab[2,],main="Fille",col=couleur)
couleur<-c("Gold","OrangeRed","Goldenrod","Brown","Black")
barplot(tab[1,],main="Garçon",col=couleur)
barplot(tab[2,],main="Fille",col=couleur)
mfrow=c(2,1)
couleur<-c("Gold","OrangeRed","Goldenrod","Brown","Black")
barplot(tab[1,],main="Garçon",col=couleur)
barplot(tab[2,],main="Fille",col=couleur)
par(mfrow=c(2,1))
couleur<-c("Gold","OrangeRed","Goldenrod","Brown","Black")
barplot(tab[1,],main="Garçon",col=couleur)
barplot(tab[2,],main="Fille",col=couleur)
barplot(tab[1,],main="Garçon",col=couleur)
barplot(tab[2,],main="Fille",col=couleur)
read.table("sommeil.txt",header = T,sep = ",")
read.table("sommeil.txt",header = T,row.names=1,sep = ",")
data<-read.table("sommeil.txt",header = T,row.names=1,sep = ",")
data<-read.table("sommeil.txt",header= T ,dec=",", row.names=1, sep = " ")
data<-read.table("sommeil.txt",header= T ,dec=",", row.names=1, sep = " ")
data
hyper<-matrix(c(225,77,99,1,0),ncol=5)
rep<-c(0.51,0.17,0.27,0.04,0.01)
rownames(hyper)<-c("Nombre de patients")
colnames(hyper)<-c("Hindous","Musulmans","Créoles","Chinois","Autres")
hyper
barplot(hyper,main="Hypertension des différentes ethnies",col = "orange")
test1<-chisq.test(hyper,p=rep); test1
test1$expected
chisq.test(tab2)
chisq.test(tab)
test1<-chisq.test(hyper,p=rep); test1
hyper
barplot(rep,main="Effectif théorique",col = "orange")
barplot(hyper,main="Hypertension des différentes ethnies",col = "orange")
barplot(rep,main="Effectif théorique",col = "orange")
barplot(hyper,main="Hypertension des différentes ethnies",col = "orange")
barplot(rep,main="Effectif théorique",col = "orange")
barplot(hyper,main="Hypertension des différentes ethnies",col = "orange")
barplot(hyper,main="Hypertension des différentes ethnies",col = "orange",las=2)
hyper2<-hyper(newCol=paste(hyper$Chinois,hyper$Autres,),Chinois=hyper$Chinois)
hyper<-matrix(c(225,77,99,1,0),ncol=5)
hyper2<-hyper(newCol=paste(hyper$Chinois,hyper$Autres,),Chinois=hyper$Chinois)
hyper2<-hyper[,-5]
hyper2<-hyper[,-5]; hyper2
rep2<-rep[c(1,2,3),rep[,4]+rep[,5]]
rep2<-rep(c(1,2,3),rep[,4]+rep[,5])
rep2<-rep(c(1,2,3),rep[,4]+rep[,5])
chisq.test(hyper2,p=rep)
rep2<-c(0.51,0.17,0.27,0.05)
rep2<-rep(c(1,2,3),rep[,4]+rep[,5])
chisq.test(hyper2,p=rep2)
hyper<-matrix(c(225,77,99,1,0),ncol=5)
rep<-c(0.51,0.17,0.27,0.04,0.01)
rownames(hyper)<-c("Nombre de patients")
colnames(hyper)<-c("Hindous","Musulmans","Créoles","Chinois","Autres")
hyper
barplot(hyper,main="Hypertension des différentes ethnies",col = "orange",las=2)
barplot(rep,main="Effectif théorique",col = "orange")
test1<-chisq.test(hyper,p=rep); test1
test1$expected
chisq.test(resultat$residuals)
chisq.test(hyper$residuals)
chisq.test(hyperé$residuals)
chisq.test(hyper2$residuals)
chisq.test(hyper2$residuals,p=rep2)
hyper3<-hyper2$residuals
Resultat<-chisq.test(hyper2); Resultat$expected
resultat<-chisq.test(tab); resultat$expected
chisq.test(Resultats,p=rep2)
chisq.test(Resultat,p=rep2)
data<-read.table("sommeil.txt",header= T ,dec=",", row.names=1, sep = " ")
t.test(data$M1,data$M2,paired=T, alternative = "less")
tab1<-matrix(c(592,544,119,97,849,677,504,451,36,14),ncol=5)
hyper<-matrix(c(225,77,99,1,0),ncol=5)
rep<-c(0.51,0.17,0.27,0.04,0.01)
rownames(hyper)<-c("Nombre de patients")
colnames(hyper)<-c("Hindous","Musulmans","Créoles","Chinois","Autres")
hyper
barplot(hyper,main="Hypertension des différentes ethnies",col = "orange",las=2)
barplot(rep,main="Effectif théorique",col = "orange")
test1<-chisq.test(hyper,p=rep); test1
test1$expected
hyper2<-hyper[,-5]; hyper2
rep2<-c(0.51,0.17,0.27,0.05)
rep2<-rep(c(1,2,3),rep[,4]+rep[,5])
chisq.test(hyper2,p=rep2)
Resultat<-chisq.test(hyper2); Resultat$expected
chisq.test(Resultat,p=rep2)
chisq.test(hyper2,p=rep2)
chisq.test(hyper2,p=rep2)
data<-read.table("sommeil.txt",header= T ,dec=",", row.names=1, sep = " ")
t.test(data$M1,data$M2,paired=T, alternative = "less")
tab1<-matrix(c(592,544,119,97,849,677,504,451,36,14),ncol=5)
setwd("~/Documents/Cours/L2/Semestre 2 /Logiciel R/TP5/Donnée")
film<-read.table("filmsencore.txt",header=T,sep = ",")
film
film<-read.table("filmsencore.txt",header=T,sep = ";")
film
