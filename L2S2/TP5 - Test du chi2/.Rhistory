datacr2<-scale(data,center=T,scale=T)
datacr2
datacr3<-scale(data,center = T,scale=etCol)
datacr3
#6
cov(data)
cor(data)
cov(datacr)
3/4*cov(datacr)
#vrai matrice des covariance, matrice des corelation,
#3/4 car (n - 1) / n
#Elles ne sont pas pareille car c'est aussi des valeurs corrige.
#7
Mcor<-3/4*cov(datacr)
Mcor
eigen(Mcor)
#9
P<-eigen(Mcor)$vectors
P
det(P)
solve(P)
solve(P)%*P
solve(P)%*%P
t(P)
t(P)%*%(P)
P
solve(P) %*%P
vp<-eigen(Mcor)%values
vp<-eigen(Mcor)$values
vp
IneRel<-vp/sum(vp)
barplot(IneRel)
IneRelCum<-Cumsum(IneRel)
IneRelCum<-cumsum(IneRel)
IneRelCum
plot(IneRelCum,type="b",ylim = c(0,1))
install.packages("FactoMineR")
library("FactoMineR", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
resACP<-PCA(data)
resACP
resACP$eig
round(resACP$ind$coord[,c(1,2)],digits = 3)
plot.PCA(resACP,choix = "ind", title = "Nuage des individus sur le plan (F1,F2)")
M2<-matrix(c(5,2,1,0,2,5,0,-1,1,0,5,-2,0,-1,-2,5),ncol = 4,)
M2
round(resACP$ind$coord[,c(1,2)],digits = 3)
plot.PCA(resACP,choix = "ind", title = "Nuage des individus sur le plan (F1,F2)")
M2
M<-matrix(c(1,1,2,0,0,2,2,0,0,0,2,2),ncol = 3,)
#2
colSums(M)
# Fait la somme des colonnes
t(M)
# Transpose la matrice
M*M
#Multiplication terme a terme
M*t(M)
# Ne peut pas se faire car la taille ne correspond pas
M%*%t(M)
# Multiplie les matrices entre elles, on entour * par % pour avoir une multiplication
# matriciel
M%*%M
# Impossible, mauvaise dimension
M/M
#
M+2*M
#
M-M
# Soustraie la matrice
#3
data<-data.frame(M)
colnames(data)<-c("V1","V2","V3")
rownames(data)<-c("A","B","C","D")
#4
MoyCol<-colMeans(data)
VarCol<-colMeans(data^2)-colMeans(data)^2
etCol<-sqrt(VarCol)
#sd fait l'ecart type corrige = standart deviasion
#5
n<-nrow(data)
n
datac<-data-(matrix(rep(MoyCol,4),byrow = T, nrow = n))
datac
#Matrice qui a etait centree
datacr<-datac/((c(1,1,1,1))%*%t(etCol))
datacr
#Matrice centre reduit, reduit quand on a soustrait l'ecart type.
datacr2<-scale(data,center=T,scale=T)
datacr2
datacr3<-scale(data,center = T,scale=etCol)
M2<-matrix(c(5,2,1,0,2,5,0,-1,1,0,5,-2,0,-1,-2,5),ncol = 4,)
M2
M2
M2<-matrix(c(5,2,1,0,2,5,0,-1,1,0,5,-2,0,-1,-2,5),ncol = 4,)
M2
solve(P)
det(M2)
det(P)
n
data<-data.frame(M)
data
colnames(data)<-c("V1","V2","V3")
rownames(data)<-c("A","B","C","D")
data
nrow(data)
data.frame(M2)
Data<-data.frame(M2)
nrow(Data)
n
N
N<-nrow(Data)
N
M2<-matrix(c(5,2,1,0,2,5,0,-1,1,0,5,-2,0,-1,-2,5),ncol = 4,)
M2
MoyCol<-colMeans(Data)
VarCol<-colMeans(Data^2)-colMeans(Data)^2
etCol<-sqrt(VarCol)
MoyCol
Datac<-Data-(matrix(rep(MoyCol,4),byrow = T, nrow = N))
Data
Datac
M2<-matrix(c(5,2,1,0,2,5,0,-1,1,0,5,-2,0,-1,-2,5),ncol = 4,)
M2
MoyCol<-colMeans(Data)
VarCol<-colMeans(Data^2)-colMeans(Data)^2
etCol<-sqrt(VarCol)
Data<-data.frame(M2)
N<-nrow(Data)
MoyCol<-colMeans(Data)
VarCol<-colMeans(Data^2)-colMeans(Data)^2
etCol<-sqrt(VarCol)
Datac<-Data-(matrix(rep(MoyCol,4),byrow = T, nrow = N))
Datac
Datacr<-Datac/((c(1,1,1,1))%*%t(etCol))
Datacr
M<-matrix(c(1,1,2,0,0,2,2,0,0,0,2,2),ncol = 3,)
#2
colSums(M)
# Fait la somme des colonnes
t(M)
# Transpose la matrice
M*M
#Multiplication terme a terme
M*t(M)
# Ne peut pas se faire car la taille ne correspond pas
M%*%t(M)
# Multiplie les matrices entre elles, on entour * par % pour avoir une multiplication
# matriciel
M%*%M
# Impossible, mauvaise dimension
M/M
#
M+2*M
#
M-M
# Soustraie la matrice
#3
data<-data.frame(M)
colnames(data)<-c("V1","V2","V3")
rownames(data)<-c("A","B","C","D")
#4
MoyCol<-colMeans(data)
VarCol<-colMeans(data^2)-colMeans(data)^2
etCol<-sqrt(VarCol)
#sd fait l'ecart type corrige = standart deviasion
#5
n<-nrow(data)
n
datac<-data-(matrix(rep(MoyCol,4),byrow = T, nrow = n))
datac
#Matrice qui a etait centree
datacr<-datac/((c(1,1,1,1))%*%t(etCol))
datacr
#Matrice centre reduit, reduit quand on a soustrait l'ecart type.
datacr2<-scale(data,center=T,scale=T)
datacr2
datacr3<-scale(data,center = T,scale=etCol)
datacr3
#6
cov(data)
cor(data)
cov(datacr)
3/4*cov(datacr)
M2<-matrix(c(5,2,1,0,2,5,0,-1,1,0,5,-2,0,-1,-2,5),ncol = 4,)
M2
Data<-data.frame(M2)
N<-nrow(Data)
MoyCol<-colMeans(Data)
VarCol<-colMeans(Data^2)-colMeans(Data)^2
etCol<-sqrt(VarCol)
Datac<-Data-(matrix(rep(MoyCol,4),byrow = T, nrow = N))
Datac
#matrice centree
Datacr<-Datac/((c(1,1,1,1))%*%t(etCol))
Datacr
3/4*cov(datacr)
3/4*cov(Datacr)
Mcor<-3/4*cov(Datacr)
Mcor
eigen(Mcor)
M<-matrix(c(1,1,2,0,0,2,2,0,0,0,2,2),ncol = 3,)
#2
colSums(M)
# Fait la somme des colonnes
t(M)
# Transpose la matrice
M*M
#Multiplication terme a terme
M*t(M)
# Ne peut pas se faire car la taille ne correspond pas
M%*%t(M)
# Multiplie les matrices entre elles, on entour * par % pour avoir une multiplication
# matriciel
M%*%M
# Impossible, mauvaise dimension
M/M
#
M+2*M
#
M-M
# Soustraie la matrice
#3
data<-data.frame(M)
colnames(data)<-c("V1","V2","V3")
rownames(data)<-c("A","B","C","D")
#4
MoyCol<-colMeans(data)
VarCol<-colMeans(data^2)-colMeans(data)^2
etCol<-sqrt(VarCol)
#sd fait l'ecart type corrige = standart deviasion
#5
n<-nrow(data)
n
datac<-data-(matrix(rep(MoyCol,4),byrow = T, nrow = n))
datac
#Matrice qui a etait centree
datacr<-datac/((c(1,1,1,1))%*%t(etCol))
datacr
#Matrice centre reduit, reduit quand on a soustrait l'ecart type.
datacr2<-scale(data,center=T,scale=T)
datacr2
datacr3<-scale(data,center = T,scale=etCol)
datacr3
#6
cov(data)
cor(data)
cov(datacr)
3/4*cov(datacr)
#vrai matrice des covariance, matrice des corelation,
#3/4 car (n - 1) / n
#Elles ne sont pas pareille car c'est aussi des valeurs corrige.
#7
Mcor<-3/4*cov(datacr)
Mcor
eigen(Mcor)
#9
P<-eigen(Mcor)$vectors
P
M2<-matrix(c(5,2,1,0,2,5,0,-1,1,0,5,-2,0,-1,-2,5),ncol = 4,)
M2
Data<-data.frame(M2)
N<-nrow(Data)
MoyCol<-colMeans(Data)
VarCol<-colMeans(Data^2)-colMeans(Data)^2
etCol<-sqrt(VarCol)
Datac<-Data-(matrix(rep(MoyCol,4),byrow = T, nrow = N))
Datac
#matrice centree
Datacr<-Datac/((c(1,1,1,1))%*%t(etCol))
Datacr
#matrice centree reduite
3/4*cov(Datacr)
Mcor<-3/4*cov(Datacr)
Mcor
eigen(Mcor)
eigen(Mcor)$values
det(eigen(Mcor)$values)
det(eigen(Mcor)$vectors)
P<-eigen(Mcor)$vectors
det(P)
solve(P)%*%P
t(P)%*%P
vp<-eigen(Mcor)$values
IneRel<-vp/sum(vp)
vp
IneRel
t(P)%*%P
P*vp*P-1
solve(P)%*%P
P-1<-solve(P)%*%P
P-1<-solve(P)%*%P
P-1 <-solve(P)%*%P
M2<-matrix(c(5,2,1,0,2,5,0,-1,1,0,5,-2,0,-1,-2,5),ncol = 4,)
M2
Data<-data.frame(M2)
N<-nrow(Data)
MoyCol<-colMeans(Data)
VarCol<-colMeans(Data^2)-colMeans(Data)^2
etCol<-sqrt(VarCol)
Datac<-Data-(matrix(rep(MoyCol,4),byrow = T, nrow = N))
Datac
#matrice centree
Datacr<-Datac/((c(1,1,1,1))%*%t(etCol))
Datacr
#matrice centree reduite
3/4*cov(Datacr)
Mcor<-3/4*cov(Datacr)
Mcor
eigen(Mcor)
vp<-eigen(Mcor)$values
#Les valeurs propres sont donc donnee par le vecteurs vp
P<-eigen(Mcor)$vectors
det(P)
P-1<-solve(P)%*%P
P1<-solve(P)%*%P
#On note les valeurs avec une tres forte puissance (-16 et -17) qui sont donc tres
#proche de 0
trans<-t(P)%*%P
P*vp*P1
t(M2)
M2
vp
P
solve(P)
P*colSums(P)*P1
Datacr
3/4*cov(Datacr)
Mcor<-3/4*cov(Datacr)
Mcor
eigen(Mcor)
M2
eigen(Mcor)
P1<-solve(P)
P
P1
vp
Mcor
M2<-matrix(c(5,2,1,0,2,5,0,-1,1,0,5,-2,0,-1,-2,5),ncol = 4,)
M2
Data<-data.frame(M2)
N<-nrow(Data)
MoyCol<-colMeans(Data)
VarCol<-colMeans(Data^2)-colMeans(Data)^2
etCol<-sqrt(VarCol)
Datac<-Data-(matrix(rep(MoyCol,4),byrow = T, nrow = N))
Datac
#matrice centree
Datacr<-Datac/((c(1,1,1,1))%*%t(etCol))
Datacr
#matrice centree reduite
Mcor<-3/4*cov(Datacr)
Mcor
eigen(Mcor)
vp<-eigen(Mcor)$values
#Les valeurs propres sont donc donnee par le vecteurs vp
P<-eigen(Mcor)$vectors
det(P)
P1<-solve(P)
#On note les valeurs avec une tres forte puissance (-16 et -17) qui sont donc tres
#proche de 0
trans<-t(P)%*%P
P**P1
diag(M2)
diag(c(5,2,1,0,2,5,0,-1,1,0,5,-2,0,-1,-2,5),ncol = 4,)
diag(c(5,2,1,0,2,5,0,-1,1,0,5,-2,0,-1,-2,5))
diag(c(5,2,1,0,2,5,0,-1,1,0,5,-2,0,-1,-2,5),ncol = 4,)
diag(c(5,2,1,0,2,5,0,-1,1,0,5,-2,0,-1,-2,5),ncol = 4, nrow = 4)
DM2<-diag(c(5,2,1,0,2,5,0,-1,1,0,5,-2,0,-1,-2,5),ncol = 4, nrow = 4)
P*DM2*P1
P
P1
DM2
P%*%DM2%*%P1
diag(eigen(m)$values)
diag(eigen(M2)$values)
d<-diag(eigen(M2)$values)
P%*%d%*%P1
M2<-matrix(c(5,2,1,0,2,5,0,-1,1,0,5,-2,0,-1,-2,5),ncol = 4,)
M2
Data<-data.frame(M2)
N<-nrow(Data)
MoyCol<-colMeans(Data)
VarCol<-colMeans(Data^2)-colMeans(Data)^2
etCol<-sqrt(VarCol)
Datac<-Data-(matrix(rep(MoyCol,4),byrow = T, nrow = N))
Datac
#matrice centree
Datacr<-Datac/((c(1,1,1,1))%*%t(etCol))
Datacr
#matrice centree reduite
eigen(M2)
#matrice centree reduite
Mcor<-3/4*cov(Datacr)
Mcor
eigen(Mcor)
vp<-eigen(Mcor)$values
#Les valeurs propres sont donc donnee par le vecteurs vp
P<-eigen(Mcor)$vectors
det(P)
P1<-solve(P)
#On note les valeurs avec une tres forte puissance (-16 et -17) qui sont donc tres
#proche de 0
d<-diag(eigen(M2)$values)
P%*%d%*%P1
d<-diag(eigen(Mcor)$values)
P%*%d%*%P1
d<-diag(eigen(M2)$values)
P%*%d%*%P1
setwd("~/Documents/Cours/L2/Semestre 2 /Logiciel R/TP5")
data<-read.table("filmsencore.txt",header= T ,sep = ",")
View(data)
data<-read.table("filmsencore.txt",header= T ,sep = ".")
data<-read.table("filmsencore.txt",header= T ,sep = ";")
test1<-chisq.test(genre,p=rep2);test1
test1<-chisq.test(data$genre,p=rep2);test1
attach(data)
test1<-chisq.test(genre,p=rep2);test1
test1<-chisq.test(genre,p=rep2,rescale.p = TRUE));test1
test1<-chisq.test(genre,p=rep2,rescale.p = TRUE);test1
t.test(genre,year>2000,paired=TRUE,alternative="less")
str(data)
chisq.test(data)
chisq.test(data[,5 ])
chisq.test(data[,5])
chisq.test(data)
rep<-c(0.05,0.25,0.08,0.49,0.13)
levels(data$genre)
names(rep)<-c("Action","Comedie","Documentaire","Drame","Romance")
Action<-data$genre[data$genre=="Action"]
as.numeric(data$genre)
hyper<-c(sum(genre=="Action"&year>=2000),sum(genre=="Comedie"&year>=2000),
sum(genre=="Documentaire"&year>=2000),
sum(genre=="Drame"&year>=2000),
sum(genre=="Romance"&year>=2000))
names(hyper)<-c("Action","Comedie",
test1<-chisq.test(hyper,p=rep)
test1
chisq.test(hyper,p=rep)
Action<-genre[genre=="Action"]
as.numeric(data$genre)
names(rep)<-c("Action","Comedie","Documentaire","Drame","Romance")
Action<-genre[genre=="Action"]
as.numeric(data$genre)
hyper<-c(sum(genre=="Action"&year>=2000),sum(genre=="Comedie"&year>=2000),
sum(genre=="Documentaire"&year>=2000),
sum(genre=="Drame"&year>=2000),
sum(genre=="Romance"&year>=2000))
chisq.test(hyper,p=rep)
Orange
barplot(hyper,main="Effectifs de l'echantillon",col=orange,cex.names=0.95,space=1)
barplot(hyper,main="Effectifs de l'echantillon",col="orange",cex.names=0.95,space=1)
barplot(hyper,main="Effectifs de l'echantillon",
col=couleur,cex.names=0.95,space=1)
couleur<-c("Red","Light blue","Black","Grey","Pink")
barplot(hyper,main="Effectifs de l'echantillon",
col=couleur,cex.names=0.95,space=1)
barplot(rep,main="Repartition de l'echantillon",
col=couleur,cex.names=0.95,space=1)
barplot(rep,main="Effectifs de l'echantillon",col="orange",cex.names=0.95,space=1)
barplot(rep,main="Repartition de l'echantillon",col=couleur,cex.names=0.95,space=1)
names(hyper)<-c("Action","Comedie","Documentaire","Drame","Romance")
barplot(hyper,main="Effectifs de l'echantillon",
col=couleur,cex.names=0.95,space=1)
barplot(rep,main="Repartition de l'echantillon",
col=couleur,cex.names=0.95,space=1)
barplot(rep,main="Effectifs de l'echantillon",col="orange",cex.names=0.95,space=1)
barplot(rep,main="Repartition de l'echantillon",col=couleur,cex.names=0.95,space=1)
barplot(rep,main="Repartition de l'echantillon",col="blue",cex.names=0.95,space=1)
barplot(hyper,main="Effectifs de l'echantillon",
col=couleur,cex.names=0.95,space=1)
barplot(rep,main="Repartition de l'echantillon",
col=couleur,cex.names=0.95,space=1)
barplot(rep,main="Effectifs de l'echantillon",col="orange",cex.names=0.95,space=1)
barplot(rep,main="Repartition de l'echantillon",col="blue",cex.names=0.95,space=1)
barplot(hyper,main="Effectifs de l'echantillon",
col=couleur,cex.names=0.95,space=1)
barplot(rep,main="Repartition de l'echantillon",col="blue",cex.names=0.95,space=1)
barplot(hyper,main="Effectifs de l'echantillon",col="orange",cex.names=0.95,space=1)
barplot(hyper,main="Effectifs de l'echantillon",col="orange",cex.names=0.95,space=1)
barplot(rep,main="Repartition de l'echantillon",col="blue",cex.names=0.95,space=1)
hyper2<-c(sum(genre=="Action"&year<=1950),sum(genre=="Comedie"&year<=1950),
sum(genre=="Documentaire"&year<=1950),
sum(genre=="Drame"&year<=1950),
sum(genre=="Romance"&year<=1950))
test2<-chisq.test(hyper2,p=rep);test2
names(hyper2)<-c("Action","Comedie",
"Documentaire","Drame","Romance")
test2<-chisq.test(hyper2,p=rep);test2
barplot(hyper2,main="Effectifs de l'echantillon",col=couleur2,cex.names=0.95,space=1)
barplot(hyper2,main="Effectifs de l'echantillon",col=orange,cex.names=0.95,space=1)
barplot(hyper2,main="Effectifs de l'echantillon",col="orange",cex.names=0.95,space=1)
barplot(rep,main="Repartition de l'echantillon",col=couleur2,cex.names=0.95,space=1)
barplot(rep,main="Repartition de l'echantillon",col="blue",cex.names=0.95,space=1)
#a
longueur<-rep("moyen",nrow(data))
longueur[length<80]<-"court"
longueur[length>100]<-"long"
#b
table<-table(data.frame(longueur,genre))
table
test3<-chisq.test(table)
test3
table<-table(data.frame(longueur,genre));table
test3<-chisq.test(table);test3
plot(longueur,genre)
barplot(longueur,genre)
barplot(longueur)
barplot(length)
barplot(length,genre)
barplot(length)
prop.test(sum(genre=="Action"&rating<=5),1000,0.05,alternative="less")
prop.test(sum(genre=="Documentaire"&rating>=8),1000,0.05,alternative="greater")
