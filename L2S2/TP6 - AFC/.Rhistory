#matrice centree reduite
3/4*cov(Datacr)
Mcor<-3/4*cov(Datacr)
Mcor
eigen(Mcor)
eigen(Mcor)$values
det(eigen(Mcor)$values)
det(eigen(Mcor)$vectors)
P<-eigen(Mcor)$vectors
det(P)
solve(P)%*%P
t(P)%*%P
vp<-eigen(Mcor)$values
IneRel<-vp/sum(vp)
vp
IneRel
t(P)%*%P
P*vp*P-1
solve(P)%*%P
P-1<-solve(P)%*%P
P-1<-solve(P)%*%P
P-1 <-solve(P)%*%P
M2<-matrix(c(5,2,1,0,2,5,0,-1,1,0,5,-2,0,-1,-2,5),ncol = 4,)
M2
Data<-data.frame(M2)
N<-nrow(Data)
MoyCol<-colMeans(Data)
VarCol<-colMeans(Data^2)-colMeans(Data)^2
etCol<-sqrt(VarCol)
Datac<-Data-(matrix(rep(MoyCol,4),byrow = T, nrow = N))
Datac
#matrice centree
Datacr<-Datac/((c(1,1,1,1))%*%t(etCol))
Datacr
#matrice centree reduite
3/4*cov(Datacr)
Mcor<-3/4*cov(Datacr)
Mcor
eigen(Mcor)
vp<-eigen(Mcor)$values
#Les valeurs propres sont donc donnee par le vecteurs vp
P<-eigen(Mcor)$vectors
det(P)
P-1<-solve(P)%*%P
P1<-solve(P)%*%P
#On note les valeurs avec une tres forte puissance (-16 et -17) qui sont donc tres
#proche de 0
trans<-t(P)%*%P
P*vp*P1
t(M2)
M2
vp
P
solve(P)
P*colSums(P)*P1
Datacr
3/4*cov(Datacr)
Mcor<-3/4*cov(Datacr)
Mcor
eigen(Mcor)
M2
eigen(Mcor)
P1<-solve(P)
P
P1
vp
Mcor
M2<-matrix(c(5,2,1,0,2,5,0,-1,1,0,5,-2,0,-1,-2,5),ncol = 4,)
M2
Data<-data.frame(M2)
N<-nrow(Data)
MoyCol<-colMeans(Data)
VarCol<-colMeans(Data^2)-colMeans(Data)^2
etCol<-sqrt(VarCol)
Datac<-Data-(matrix(rep(MoyCol,4),byrow = T, nrow = N))
Datac
#matrice centree
Datacr<-Datac/((c(1,1,1,1))%*%t(etCol))
Datacr
#matrice centree reduite
Mcor<-3/4*cov(Datacr)
Mcor
eigen(Mcor)
vp<-eigen(Mcor)$values
#Les valeurs propres sont donc donnee par le vecteurs vp
P<-eigen(Mcor)$vectors
det(P)
P1<-solve(P)
#On note les valeurs avec une tres forte puissance (-16 et -17) qui sont donc tres
#proche de 0
trans<-t(P)%*%P
P**P1
diag(M2)
diag(c(5,2,1,0,2,5,0,-1,1,0,5,-2,0,-1,-2,5),ncol = 4,)
diag(c(5,2,1,0,2,5,0,-1,1,0,5,-2,0,-1,-2,5))
diag(c(5,2,1,0,2,5,0,-1,1,0,5,-2,0,-1,-2,5),ncol = 4,)
diag(c(5,2,1,0,2,5,0,-1,1,0,5,-2,0,-1,-2,5),ncol = 4, nrow = 4)
DM2<-diag(c(5,2,1,0,2,5,0,-1,1,0,5,-2,0,-1,-2,5),ncol = 4, nrow = 4)
P*DM2*P1
P
P1
DM2
P%*%DM2%*%P1
diag(eigen(m)$values)
diag(eigen(M2)$values)
d<-diag(eigen(M2)$values)
P%*%d%*%P1
M2<-matrix(c(5,2,1,0,2,5,0,-1,1,0,5,-2,0,-1,-2,5),ncol = 4,)
M2
Data<-data.frame(M2)
N<-nrow(Data)
MoyCol<-colMeans(Data)
VarCol<-colMeans(Data^2)-colMeans(Data)^2
etCol<-sqrt(VarCol)
Datac<-Data-(matrix(rep(MoyCol,4),byrow = T, nrow = N))
Datac
#matrice centree
Datacr<-Datac/((c(1,1,1,1))%*%t(etCol))
Datacr
#matrice centree reduite
eigen(M2)
#matrice centree reduite
Mcor<-3/4*cov(Datacr)
Mcor
eigen(Mcor)
vp<-eigen(Mcor)$values
#Les valeurs propres sont donc donnee par le vecteurs vp
P<-eigen(Mcor)$vectors
det(P)
P1<-solve(P)
#On note les valeurs avec une tres forte puissance (-16 et -17) qui sont donc tres
#proche de 0
d<-diag(eigen(M2)$values)
P%*%d%*%P1
d<-diag(eigen(Mcor)$values)
P%*%d%*%P1
d<-diag(eigen(M2)$values)
P%*%d%*%P1
m<-2
s<-1
n<-100
N<-200
X<-matrix(rnorm(n*N,m,s)n,N)
X<-matrix(rnorm(n*N,m,s)n,N))
X<-matrix(rnorm(n*N,m,s)n,N)
X<-matrix(rnorm(n*N,m,s),n,N)
Xbar<-colSums/n
Xbar<-colSums(X/n)
plot(Xbar, 1:N, xlim=c(1,3))
Ibinf<-Xbar-1.96*s/sqrt(n)
Ibinf
Xbar
X
Xbar
Xbar<-(colSums(X))/n
Xbar
X
Xbar<-colSums(X/n)
Xbar
plot(Xbar, 1:N, xlim=c(1,3))
#3
Ibinf<-Xbar-1.96*s/sqrt(n)
Ibinf
m<-2
s<-1
n<-100
N<-200
X<-matrix(rnorm(n*N,m,s),n,N)
X
#2
Xbar<-colSums(X/n)
Xbar
Xbar
plot(Xbar, 1:N, xlim=c(1,3))
#3
Ibinf<-Xbar-1.96*s/sqrt(n)
Ibinf
Ibinf
Ibsup
Ibsup<-Xbar+1.96*s/sqrt(n)
Ibsup
sum((m>Ibinf)&(m<Ibsup))
sum((m>Ibinf)&(m<Ibsup))/N
segments(Ibinf,1:N,Ibsup,1:N)
abline(v=2,col="red")
abline(v=2,col="red",xlab="moyenne",ylab="effectif")
abline(v=2,col="red",xlab="moyenne",ylab="effectif")
segments(Ibinf,1:N,Ibsup,1:N,,xlab="moyenne",ylab="effectif")
abline(v=2,col="red")
abline(v=2,col="red")
help(qnorm)
segments(Ibinf,1:N,Ibsup,1:N,conf.level = 0.90)
qnorm(0.975)
a<-0.05
qnorm(1-a/2)
Ibsup2<-Xbar+(1-a)*s/sqrt(n)
segments(Ibinf,1:N,Ibsup,1:N,conf.level = 0.90)
a<-0.1
Ibsup2<-Xbar+qnorm(1-a/2)*s/sqrt(n)
Ibinf2<-Xbar-qnorm(1-a/2)*s/sqrt(n)
segments(Ibinf,1:N,Ibsup,1:N)
segments(Ibinf2,1:N,Ibsup2,1:N)
n<-4000
n<-4000
Ibsup<-Xbar+qnorm(1-a/2)*s/sqrt(n)
Ibinf<-Xbar-qnorm(1-a/2)*s/sqrt(n)
segments(Ibinf,1:N,Ibsup,1:N)
plot(Xbar, 1:N, xlim=c(1,3))
segments(Ibinf,1:N,Ibsup,1:N)
n<-30
Ibsup<-Xbar+qnorm(1-a/2)*s/sqrt(n)
Ibinf<-Xbar-qnorm(1-a/2)*s/sqrt(n)
segments(Ibinf,1:N,Ibsup,1:N)
n<-5000000
Ibsup<-Xbar+qnorm(1-a/2)*s/sqrt(n)
Ibinf<-Xbar-qnorm(1-a/2)*s/sqrt(n)
segments(Ibinf,1:N,Ibsup,1:N)
n<-4000
Ibsup<-Xbar+qnorm(1-a/2)*s/sqrt(n)
Ibinf<-Xbar-qnorm(1-a/2)*s/sqrt(n)
segments(Ibinf,1:N,Ibsup,1:N)
prix1<-c(42.7,42.6,43,43.5,42.8,42.1,43.6,42.9,41.6,42.8,42.9,43.2,42.6,43.1,43.1)
hist(prix1)
boxplot(prix1)
hist(prix1,col="red")
boxplot(prix1)
boxplot(prix1,col="orange")
shapiro.test(prix1)
help("shapiro.test")
t.test(prix1, mu=43, alternative="two.sided")
test$p.value
test$conf.int
test$estimate
test$null.value
test$alternative
test$method
test<-t.test(prix1, mu=43, alternative="two.sided")
test$p.value
test$conf.int
test$estimate
test$null.value
test$alternative
test$method
test<-t.test(prix1, mu=43, alternative = "two.sided", conf.level=0.9)$conf.int
prix2<-c(40.9,43.4,42.2,41.6,42.9,40.8,42.5,41.6,40.4,42.5,41.1,41.8,43.3,43.4,43.4)
boxplot(prix1,prix2)
var.test(prix1,prix2)
t.test(prix1,prix2, alternative="greater",var.equal=FALSE)
boxplot(prix1,prix2,names("prix1","prix2"))
boxplot(prix1,prix2,names="prix1","prix2")
boxplot(prix1,prix2,names=("prix1","prix2")
boxplot(prix1,prix2)
boxplot(prix1,prix2)
var.test(prix1,prix2)
t.test(prix1,prix2, alternative="greater",var.equal=FALSE)
shapiro.test(prix1)
iris
df<-iris
df
View(df)
attach(df)
qnorm(0.92)
attach(df)
df<-iris
a<-0.08
Ibinf<-Xbar-qnorm(1-a/2)*s/sqrt(n)
Ibsup<-Xbar+qnorm(1-a/2)*s/sqrt(n)
View(df)
sum[df$Species(versicolor)]
sum[df$Species,versicolor]
sum[df$Species,versicolor]
prop.test(18,64,0.15)
setwd("~/Documents/Cours/L2/Semestre 2 /Logiciel R/TP6 Correction")
read.table("srfagrmp.txt", sep = " ", header = T)
read.table("surfagrmp.txt", sep = " ", header = T)
data<-read.table("surfagrmp.txt", sep = " ", header = T)
chisq.test(data)
View(data)
ContriChi2<-eigen(data)
ContriChi2<-
eig(data)
ContriChi2<-
cor(data)
ContriChi2<-cor(data)
View(ContriChi2)
colSums(ContriChi2)
rowSums(ContriChi2)
MargeL<-colSums(ContriChi2)
MargeC<-rowSums(ContriChi2)
ContriChi2M<-rbind(ContriChi2,MargeL)
ContriChi2M
ContriChi2M<-cbind(ContriChi2,MargeC))
ContriChi2M<-cbind(ContriChi2,MargeC)
ContriChi2
ContriChi2M
ContriChi2M<-rbind(ContriChi2,MargeL)
ContriChi2M<-cbind(ContriChi2,MargeC)
ContriChi2M
ContriChi2M<-rbind(ContriChi2,MargeL)
ContriChi2M<-cbind(ContriChi2M,MargeC)
MargeL<-colSums(ContriChi2)
MargeC<-rowSums(ContriChi2)
ContriChi2M<-rbind(ContriChi2,MargeL)
ContriChi2M<-cbind(ContriChi2,rowSums(ContriChi2))
ContriChi2M
ContriChi2M<-cbind(ContriChi2M,MargeC)
ContriChi2M
data<-read.table("surfagrmp.txt", sep = " ", header = T)
chisq.test(data)
ContriChi2<-cor(data)
MargeL<-colSums(ContriChi2)
MargeC<-rowSums(ContriChi2)
ContriChi2M<-rbind(ContriChi2,MargeL)
ContriChi2M<-cbind(ContriChi2M,MargeC)
ContriChi2M
Total.colonne<-colSums(ContriChi2)
Total.ligne<-rowSums(ContriChi2)
ContriChi2M<-rbind(ContriChi2,MargeL)
ContriChi2M<-cbind(ContriChi2M,MargeC)
ContriChi2M
data<-read.table("surfagrmp.txt", sep = " ", header = T)
chisq.test(data)
ContriChi2<-cor(data)
Total.colonne<-colSums(ContriChi2)
Total.ligne<-rowSums(ContriChi2)
ContriChi2M<-rbind(ContriChi2,MargeL)
ContriChi2M<-cbind(ContriChi2M,MargeC)
ContriChi2M
ContriChi2M<-cbind(ContriChi2M,)
ContriChi2M<-rbind(ContriChi2,Total.colonne)
ContriChi2M<-cbind(ContriChi2M,Total.ligne)
ContriChi2M
View(ContriChi2M)
MargeL<-colSums(ContriChi2)
MargeC<-rowSums(ContriChi2)
ContriChi2M<-rbind(ContriChi2,MargeL)
ContriChi2M<-cbind(ContriChi2,rowSums(ContriChi2))
colnames(ContriChi2M)[ncol(ContriChi2M)]<-"Total"
rownames(ContriChi2M)[nrow(ContriChi2M)]<-"Total"
View(ContriChi2M)
View(data)
ContriChi2MB<-addmargins(ContriChi2)
View(ContriChi2MB)
colnames(ContriChi2MB)[ncol(ContriChi2MB)]<-"Total"
rownames(ContriChi2MB)[nrow(ContriChi2MB)]<-"Total"
View(ContriChi2MB)
View(ContriChi2MB)
data<-read.table("surfagrmp.txt", sep = " ", header = T)
chisq.test(data)
ContriChi2<-cor(data)
ContriChi2MB<-addmargins(ContriChi2)
View(ContriChi2MB)
colnames(ContriChi2MB)[ncol(ContriChi2MB)]<-"Total"
rownames(ContriChi2MB)[nrow(ContriChi2MB)]<-"Total"
View(ContriChi2MB)
data<-read.table("surfagrmp.txt", sep = " ", header = T)
chisq.test(data)
ContriChi2<-cor(data)
ContriChi2M<-addmargins(ContriChi2)
View(ContriChi2M)
colnames(ContriChi2MB)[ncol(ContriChi2MB)]<-"Total"
rownames(ContriChi2MB)[nrow(ContriChi2MB)]<-"Total"
colnames(ContriChi2M)[ncol(ContriChi2M)]<-"Total"
rownames(ContriChi2M)[nrow(ContriChi2M)]<-"Total"
View(ContriChi2M)
sort(MargeC,decreasing=T)
sort(rowSums(data),decreasing=T)
sort(rowSums(data),decreasing=T)//test1$statistic
sort(rowSums(data),decreasing=T)//chisq.test(data)$statistic
sort(rowSums(data),decreasing=T)/chisq.test(data)$statistic
(sort(rowSums(data),decreasing=T)/chisq.test(data)$statistic)*100
sum(dtr)
dtr<-sort(rowSums(data),decreasing=T)/chisq.test(data)$statistic
sum(dtr)
data<-read.table("surfagrmp.txt", sep = " ", header = T)
chisq.test(data)
ContriChi2<-cor(data)
ContriChi2M<-addmargins(ContriChi2)
colnames(ContriChi2M)[ncol(ContriChi2M)]<-"Total"
rownames(ContriChi2M)[nrow(ContriChi2M)]<-"Total"
sort(rowSums(data),decreasing=T)/chisq.test(data)$statistic
ContriChi2<-(test$residuals)^2
test<-chisq.test(data)
ContriChi2<-(test$residuals)^2
View(ContriChi2M)
test1<-chisq.test(data)
ContriChi2<-(test$residuals)^2
data<-read.table("surfagrmp.txt", sep = " ", header = T)
chisq.test(data)
test1<-chisq.test(data)
ContriChi2<-(test$residuals)^2
ContriChi2<-(test$residuals)^2
ContriChi2<-(test1$residuals)^2
test1<-chisq.test(data)
data<-read.table("surfagrmp.txt", sep = " ", header = T)
chisq.test(data)
test1<-chisq.test(data)
ContriChi2<-(test1$residuals)^2
View(ContriChi2)
ContriChi2M<-addmargins(ContriChi2)
colnames(ContriChi2M)[ncol(ContriChi2M)]<-"Total"
rownames(ContriChi2M)[nrow(ContriChi2M)]<-"Total"
(sort(rowSums(data),decreasing=T)/chisq.test(data)$statistic)
sort(rowSums(data),decreasing=T)/chisq.test(data)$statistic
sum(dtr)
dtr<-sort(rowSums(data),decreasing=T)/chisq.test(data)$statistic
sum(dtr)
View(data)
data <- read.table("surfagrmp.txt", header=TRUE, quote="\"")
View(data)
chisq.test(data)
test1<-chisq.test(data)
ContriChi2<-(test1$residuals)^2
ContriChi2
MargeL<-colSums(ContriChi2)
MargeC<-rowSums(ContriChi2)
ContriChi2M<-rbind(ContriChi2,MargeL)
ContriChi2M<-cbind(ContriChi2,rowSums(ContriChi2))
colnames(ContriChi2M)[ncol(ContriChi2M)]<-"Total"
rownames(ContriChi2M)[nrow(ContriChi2M)]<-"Total"
ContriChi2MB<-addmargins(ContriChi2)
colnames(ContriChi2MB)[ncol(ContriChi2MB)]<-"Total"
rownames(ContriChi2MB)[nrow(ContriChi2MB)]<-"Total"
sort(MargeC,decreasing=T)
round(sort(MargeC,decreasing=T)/test1$statistic,2)
sort(MargeL,decreasing=T)
dtr<-sort(rowSums(ContriChi2),decreasing=T)/chisq.test(data)$statistic
sum(dtr)
sort(rowSums(ContriChi2),decreasing=T)/chisq.test(data)$statistic
(sort(rowSums(ContriChi2),decreasing=T)/chisq.test(data)$statistic)*100
data<-read.table("surfagrmp.txt", sep = " ", header = T)
chisq.test(data)
test1<-chisq.test(data)
ContriChi2<-(test1$residuals)^2
ContriChi2M<-addmargins(ContriChi2)
colnames(ContriChi2M)[ncol(ContriChi2M)]<-"Total"
rownames(ContriChi2M)[nrow(ContriChi2M)]<-"Total"
(sort(rowSums(ContriChi2),decreasing=T)/chisq.test(data)$statistic)*100
dtr<-(sort(rowSums(ContriChi2),decreasing=T)/chisq.test(data)$statistic)*100
sum(dtr)
data<-read.table("surfagrmp.txt", sep = " ", header = T)
chisq.test(data)
test1<-chisq.test(data)
ContriChi2<-(test1$residuals)^2
ContriChi2M<-addmargins(ContriChi2)
colnames(ContriChi2M)[ncol(ContriChi2M)]<-"Total"
rownames(ContriChi2M)[nrow(ContriChi2M)]<-"Total"
(sort(rowSums(ContriChi2),decreasing=T)/chisq.test(data)$statistic)*100
(sort(colSums(ContriChi2),decreasing=T)/chisq.test(data)$statistic)*100
dtr<-(sort(colSums(ContriChi2),decreasing=T)/chisq.test(data)$statistic)*100
sum(dtr)
data<-read.table("surfagrmp.txt", sep = " ", header = T)
chisq.test(data)
test1<-chisq.test(data)
ContriChi2<-(test1$residuals)^2
ContriChi2M<-addmargins(ContriChi2)
colnames(ContriChi2M)[ncol(ContriChi2M)]<-"Total"
rownames(ContriChi2M)[nrow(ContriChi2M)]<-"Total"
(sort(rowSums(ContriChi2),decreasing=T)/chisq.test(data)$statistic)*100
(sort(colSums(ContriChi2),decreasing=T)/chisq.test(data)$statistic)*100
View(data)
?addmargins
addmargins(data)
dataMa<-addmargins(data(as.matrix))
dataMa<-addmargins(as.matrix(data))
dataMa
dataf<-data/dataMa[nrow(dataMa),ncol(dataMa)]
dataf
View(dataf)
View(dataMa)
library("FactoMineR", lib.loc="C:/Program Files/R/R-3.1.2/library")
prop.table(dataMa)
prop.table(dataMa,1)
tab<-addmargins(as.matrix(data),1)  #ajoute le total des colonnes (donc la marge ligne)
dataPL<-prop.table(tab,1) #détermines les profils lignes en divisant par le total ligne.
dataPL<-addmargins(as.matrix(dataPL),2) #ajoute la colonne totale et permet de vérifier
View(dataPL)
tab<-addmargins(as.matrix(data),2)
dataPC<-prop.table(tab,2)
dataPC<-addmargins(as.matrix(dataPC),1)
View(dataPC)
View(tab)
dataPC<-prop.table(tab,2)
View(dataPC)
dataPC<-addmargins(as.matrix(dataPC),1)
View(dataPC)
tab1<-addmargins(as.matrix(data),1)
prop.table(tab1,1)
tab2<-addmargins(as.matrix(data),2)
data.PC<-prop.table(tab,2)
data<-read.table("surfagrmp.txt", sep = " ", header = T)
chisq.test(data)
test1<-chisq.test(data)
ContriChi2<-(test1$residuals)^2
ContriChi2M<-addmargins(ContriChi2)
colnames(ContriChi2M)[ncol(ContriChi2M)]<-"Total"
rownames(ContriChi2M)[nrow(ContriChi2M)]<-"Total"
(sort(rowSums(ContriChi2),decreasing=T)/chisq.test(data)$statistic)*100
(sort(colSums(ContriChi2),decreasing=T)/chisq.test(data)$statistic)*100
dataMa<-addmargins(as.matrix(data))
dataf<-data/dataMa[nrow(dataMa),ncol(dataMa)]
tab1<-addmargins(as.matrix(data),1)
data.PL<-prop.table(tab1,1)
tab2<-addmargins(as.matrix(data),2)
data.PC<-prop.table(tab,2)
data.PC<-prop.table(tab2,2)
View(data.PL)
View(data.PC)
library("FactoMineR", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
resca<-CA(data)
resca
summary.CA(resca)
