x<-seq(-10,10,0.1)
eff<-(rbinom(N,n,p)-n*p)/sqrt(n*p*(1-p))
mean(eff); var(eff)
#
#3
y<-seq(-5.25,5.25,0.25)
hist(rbinom(N,n,p),freq=F,main="échantillons", xlab="",ylab="", col="blue",lwd="2");
curve(eff,from = -5.25, to=5.25, n=150,type="l" ,add=TRUE,col="red",lwd=2);xb<-1:n; xn<-seq(0,n,0.2); plot(dbinom(xb,n,p),type="h",col="red"); lines(xn,dnorm(xn,n*p,sqrt(n*p*(1-p))),col="blue")
eff
curve(eff[0,150]);xb<-1:n; xn<-seq(0,n,0.2); plot(dbinom(xb,n,p),type="h",col="red"); lines(xn,dnorm(xn,n*p,sqrt(n*p*(1-p))),col="blue")
curve(x[0,150]);xb<-1:n; xn<-seq(0,n,0.2); plot(dbinom(xb,n,p),type="h",col="red"); lines(xn,dnorm(xn,n*p,sqrt(n*p*(1-p))),col="blue")
curve(x[0,10]);xb<-1:n; xn<-seq(0,n,0.2); plot(dbinom(xb,n,p),type="h",col="red"); lines(xn,dnorm(xn,n*p,sqrt(n*p*(1-p))),col="blue")
curve(x[10,100]);xb<-1:n; xn<-seq(0,n,0.2); plot(dbinom(xb,n,p),type="h",col="red"); lines(xn,dnorm(xn,n*p,sqrt(n*p*(1-p))),col="blue")
curve(x[40,80]);xb<-1:n; xn<-seq(0,n,0.2); plot(dbinom(xb,n,p),type="h",col="red"); lines(xn,dnorm(xn,n*p,sqrt(n*p*(1-p))),col="blue")
curve(x[-10,10]);xb<-1:n; xn<-seq(0,n,0.2); plot(dbinom(xb,n,p),type="h",col="red"); lines(xn,dnorm(xn,n*p,sqrt(n*p*(1-p))),col="blue")
curve(x[-9,9]);xb<-1:n; xn<-seq(0,n,0.2); plot(dbinom(xb,n,p),type="h",col="red"); lines(xn,dnorm(xn,n*p,sqrt(n*p*(1-p))),col="blue")
curve(y[-9,9]);xb<-1:n; xn<-seq(0,n,0.2); plot(dbinom(xb,n,p),type="h",col="red"); lines(xn,dnorm(xn,n*p,sqrt(n*p*(1-p))),col="blue")
curve(x[-9,9]);xb<-1:n; xn<-seq(0,n,0.2); plot(dbinom(xb,n,p),type="h",col="red"); lines(xn,dnorm(xn,n*p,sqrt(n*p*(1-p))),col="blue")
N<-25000; n<-150; p<-0.4
x<-seq(-10,10,0.1)
eff<-(rbinom(N,n,p)-n*p)/sqrt(n*p*(1-p))
mean(eff); var(eff)
curve(x[-9,9]);xb<-1:n; xn<-seq(0,n,0.2); plot(dbinom(xb,n,p),type="h",col="red"); lines(xn,dnorm(xn,n*p,sqrt(n*p*(1-p))),col="blue")
curve(x[n,p]);xb<-1:n; xn<-seq(0,n,0.2); plot(dbinom(xb,n,p),type="h",col="red"); lines(xn,dnorm(xn,n*p,sqrt(n*p*(1-p))),col="blue")
curve(x[N,p]);xb<-1:n; xn<-seq(0,n,0.2); plot(dbinom(xb,n,p),type="h",col="red"); lines(xn,dnorm(xn,n*p,sqrt(n*p*(1-p))),col="blue")
curve(x[N,n]);xb<-1:n; xn<-seq(0,n,0.2); plot(dbinom(xb,n,p),type="h",col="red"); lines(xn,dnorm(xn,n*p,sqrt(n*p*(1-p))),col="blue")
curve(x[p,n]);xb<-1:n; xn<-seq(0,n,0.2); plot(dbinom(xb,n,p),type="h",col="red"); lines(xn,dnorm(xn,n*p,sqrt(n*p*(1-p))),col="blue")
curve(x[x,y]);xb<-1:n; xn<-seq(0,n,0.2); plot(dbinom(xb,n,p),type="h",col="red"); lines(xn,dnorm(xn,n*p,sqrt(n*p*(1-p))),col="blue")
curve(x[mean(eff),var(eff)]);xb<-1:n; xn<-seq(0,n,0.2); plot(dbinom(xb,n,p),type="h",col="red"); lines(xn,dnorm(xn,n*p,sqrt(n*p*(1-p))),col="blue")
curve(x[0,0]);xb<-1:n; xn<-seq(0,n,0.2); plot(dbinom(xb,n,p),type="h",col="red"); lines(xn,dnorm(xn,n*p,sqrt(n*p*(1-p))),col="blue")
curve(vnorm,add=TRUE,col="red",lwd=2)
curve(eff,add=TRUE,col="red",lwd=2)
curve(x,add=TRUE,col="red",lwd=2)
curve(x,[add=TRUE,col="red",lwd=2])
curve(x,add=TRUE,col="red",lwd=2])
curve(x,add=TRUE,col="red",lwd=2)
curve(,add=TRUE,col="red",lwd=2)
curve(sexpr,add=TRUE,col="red",lwd=2)
curve(y,add=TRUE,col="red",lwd=2)
dnorme(x)
N<-25000; n<-150; p<-0.4
x<-seq(-10,10,0.1)
eff<-(rbinom(N,n,p)-n*p)/sqrt(n*p*(1-p))
#2
mean(eff); var(eff)
#
#3
y<-seq(-5.25,5.25,0.25)
hist(rbinom(N,n,p),freq=F,main="échantillons", xlab="",ylab="", col="blue",lwd="2");
dnorme(x)
lines(dnorm,x)
N<-25000; n<-150; p<-0.4
x<-seq(-10,10,0.1)
eff<-(rbinom(N,n,p)-n*p)/sqrt(n*p*(1-p))
#2
mean(eff); var(eff)
#
#3
y<-seq(-5.25,5.25,0.25)
hist(rbinom(N,n,p),freq=F,main="échantillons", xlab="",ylab="", col="blue",lwd="2");
sim<-dbinom(3,100,0.01)
O<-cumsum(sim)/3:100
plot(3:100,O,type="l",lwd=1, fg="blue",cex.lab=1.5,cex.axis=1,col.lab="pink", col.axis="green", main = "Echantillon binomial", ylab="Densité",xlab = "Effectif")
abline(h=0.0035,col="red")
sim<-rbinom(3,100,0.01)
O<-cumsum(sim)/3:100
plot(3:100,O,type="l",lwd=1, fg="blue",cex.lab=1.5,cex.axis=1,col.lab="pink", col.axis="green", main = "Echantillon binomial", ylab="Densité",xlab = "Effectif")
abline(h=0.0035,col="red")
sim<-dbinom(3,100,0.01)
O<-cumsum(sim)/3:100
plot(3:100,O,type="l",lwd=1, fg="blue",cex.lab=1.5,cex.axis=1,col.lab="pink", col.axis="green", main = "Echantillon binomial", ylab="Densité",xlab = "Effectif")
abline(h=0.0035,col="red")
plot(1:100,O,type="l",lwd=1, fg="blue",cex.lab=1.5,cex.axis=1,col.lab="pink", col.axis="green", main = "Echantillon binomial", ylab="Densité",xlab = "Effectif")
abline(h=0.0035,col="red")
sim<-rbinom(10,100,0.01)
O<-cumsum(sim)/1:100
plot(1:100,O,type="l",lwd=1, fg="blue",cex.lab=1.5,cex.axis=1,col.lab="pink", col.axis="green", main = "Echantillon binomial", ylab="Densité",xlab = "Effectif")
abline(h=0.0035,col="red")
abline(h=0.2,col="red")
#Exercice
#1
N<-25000; n<-150; p<-0.4
x<-seq(-10,10,0.1)
eff<-(rbinom(N,n,p)-n*p)/sqrt(n*p*(1-p))
#2
mean(eff); var(eff)
#
#3
y<-seq(-5.25,5.25,0.25)
hist(rbinom(N,n,p),freq=F,main="échantillons", xlab="",ylab="", col="blue",lwd="2");
lines(dnorm,x)
xb<-1:n; xn<-seq(0,n,0.2); plot(dbinom(xb,n,p),type="h",col="red"); lines(xn,dnorm(xn,n*p,sqrt(n*p*(1-p))),col="blue")
y<-seq(-5.25,5.25,0.25)
hist(rbinom(N,n,p),freq=F,main="échantillons", xlab="",ylab="", col="blue",lwd="2");
lines(dnorm,x)
xb<-1:n; xn<-seq(0,n,0.2); plot(dbinom(xb,n,p),type="h",col="red"); lines(xn,dnorm(xn,n*p,sqrt(n*p*(1-p))),col="blue")
bornes<-seq(-5.25,5.25,0.25)
hist(eff,freq=F,main="Histogramme des fréquences", xlab="",ylab="", col="blue",lwd="2");
hist(eff,freq=F,main="Histogramme des fréquences", xlab="",ylab="", col="blue",lwd="2", ylim = (0.04);
hist(eff,freq=F,main="Histogramme des fréquences", xlab="",ylab="", col="blue",lwd="2", ylim = (0,0.4);
hist(eff,freq=F,main="Histogramme des fréquences", xlab="",ylab="", col="blue",lwd="2", ylim = (0,0.4))
hist(eff,freq=F,main="Histogramme des fréquences", xlab="",ylab="", col="blue",lwd="2", ylim = c(0,0.4))
y<-dnorm(x)
lines(x,y)
lines(x,y), col="red"
lines(x,y,col="red")
echp<-rpois (12000,3)
Y<- cumsum(echp)/1:12000
plot(1:12000,Y,type="l", lwd = 1, fg = "black", bty = "l",cex.lab = 1.5, cex.axis = 1, col.lab = "pink", col.axis = "red", main="Echantillon", ylab = "Frequence",xlab="Effectif")
abline(h=3,col="red")
#2
#La loi simulée est la loi de Poisson
#3
#Y représente les fréquences cumulées, dans le cadre d'un problème
#d'éstimation Y nous permet d'éstimer l'espérance.
#4
#Sur le graphique cela est bien représenté puisque la loi suivit tend vers 3, et la
#commande abline trace une droite qui en 3 qui est donc l'esperance.
#5
sim<-rbinom(10,100,0.01)
O<-cumsum(sim)/1:100
plot(1:100,O,type="l",lwd=1, fg="blue",cex.lab=1.5,cex.axis=1,col.lab="pink", col.axis="green", main = "Echantillon binomial", ylab="Densité",xlab = "Effectif")
abline(h=0.2,col="red")
source('~/TD3 - Schmitt.R')
source('~/TD3 - Schmitt.R')
source('~/TD3 - Schmitt.R')
m<-2; s<-1
m<-2; s<-1
n<-100; N<-200
X<-matrix(rnorm(n*N,m,s)n,N)
X<-matrix(rnorm(n*N,m,s),n,N)
X
Xbar<-colSums
Xbar
Xbar<-colSums
Xbar<-colSumsn((n*N,m,s),n,N)
Xbar<-colSumsn(n*N,m,s)
Xbar<-colSumsn
Xbar
Xbar<-colSumsn(X)
Xbar<-colSums(X)
Xbar
View(X)
Xbar<-colSums(X/N)
Xbar
Xbar<-colSums(X/n)
Xbar
plot(Xbar, 1:N, xlim=c(1,3))
plot(Xbar, 1:N, xlim=c(1,3), main ="")
Ibinf<-(Xbar±1.96*1/sqrt(n))
Ibinf<-((Xbar)±1.96*1/sqrt(n))
Ibinf<-(Xbar+1.96*1/sqrt(n))
Ibsup<-(Xbar-1.96*1/sqrt(n))
Ibinf
Ibsup
sum((m>Ibinf)&(m<Ibsup))
Ibsup<-Xbar-1.96*1/sqrt(n)
#5
sum((m>Ibinf)&(m<Ibsup))
Ibinf<-Xbar+1.96*1/sqrt(n)
#4
Ibsup<-Xbar-1.96*1/sqrt(n)
#5
sum((m>Ibinf)&(m<Ibsup))
m<-2; s<-1
n<-100; N<-200
X<-matrix(rnorm(n*N,m,s),n,N)
#2
Xbar<-colSums(X/n)
plot(Xbar, 1:N, xlim=c(1,3), main ="")
#3
Ibinf<-Xbar+1.96*1/sqrt(n)
#4
Ibsup<-Xbar-1.96*1/sqrt(n)
#5
sum((m>Ibinf)&(m<Ibsup))
m<-2; s<-1
n<-100; N<-200
X<-matrix(rnorm(n*N,m,s),n,N)
#2
Xbar<-colSums(X/n)
plot(Xbar, 1:N, xlim=c(1,3), main ="")
#3
Ibinf<-Xbar+1.96*1/sqrt(n)
#4
Ibsup<-Xbar-1.96*1/sqrt(n)
#5
sum((m>Ibinf)&(m<Ibsup))
Ibinf<-Xbar+1.96*s/sqrt(n)
#4
Ibsup<-Xbar-1.96*s/sqrt(n)
#5
sum((m>Ibinf)&(m<Ibsup))
m<-2; s<-1
n<-100; N<-200
X<-matrix(rnorm(n*N,m,s),n,N)
#2
Xbar<-colSums(X/n)
plot(Xbar, 1:N, xlim=c(1,3), main ="")
#3
Ibinf<-Xbar+1.96*s/sqrt(n)
#4
Ibsup<-Xbar-1.96*s/sqrt(n)
#5
sum((m>Ibinf)&(m<Ibsup))
m>Ibinf
m<Ibsup
sum((m>Ibinf)&(m<Ibsup))
sum( (m>Ibinf)&(m<Ibsup))
#Exercice 1
#1
m<-2; s<-1
n<-100; N<-200
X<-matrix(rnorm(n*N,m,s),n,N)
#2
Xbar<-colSums(X/n)
plot(Xbar, 1:N, xlim=c(1,3), main ="")
#3
Ibinf<-Xbar+1.96*s/sqrt(n)
#4
Ibsup<-Xbar-1.96*s/sqrt(n)
#5
sum((m>Ibinf)&(m<Ibsup))
#1
m<-2; s<-1
n<-100; N<-200
X<-matrix(rnorm(n*N,m,s),n,N)
#2
Xbar<-colSums(X/n)
plot(Xbar, 1:N, xlim=c(1,3), main ="")
#3
Ibinf<-Xbar+1.96*s/sqrt(n)
#4
Ibsup<-Xbar-1.96*s/sqrt(n)
#5
sum((m>Ibinf)&(m<Ibsup))
#1
m<-2; s<-1
n<-100; N<-200
X<-matrix(rnorm(n*N,m,s),n,N)
#2
Xbar<-colSums(X/n)
plot(Xbar, 1:N, xlim=c(1,3), main ="")
#3
Ibinf<-Xbar+1.96*s/sqrt(n)
#4
Ibsup<-Xbar-1.96*s/sqrt(n)
#5
sum((m>Ibinf)&(m<Ibsup))
sum((m>Ibinf)&(m<Ibsup))
m<-2; s<-1
n<-100; N<-200
X<-matrix(rnorm(n*N,m,s),n,N)
#2
Xbar<-colSums(X/n)
plot(Xbar, 1:N, xlim=c(1,3), main ="")
#3
Ibinf<-Xbar+1.96*s/sqrt(n)
#4
Ibsup<-Xbar-1.96*s/sqrt(n)
#5
sum((m>Ibinf)&(m<Ibsup))
Ibinf<-Xbar-1.96*s/sqrt(n)
#4
Ibsup<-Xbar+1.96*s/sqrt(n)
#5
sum((m>Ibinf)&(m<Ibsup))
sum((m>Ibinf)&(m<Ibsup))/N
segments(Ibin, 1:N, Ibsu, 1:N)
segments(Ibinf, 1:N, Ibsu, 1:N)
segments(Ibinf, 1:N, Ibsup, 1:N)
segments(Ibinf, 1:N, Ibsup, 1:N,col = "red")
segments(Ibinf, 1:N, Ibsup, 1:N,col = "black")
segments(Ibinf, 1:N, Ibsup, 1:N,col = "lightblue")
segments(Ibinf, 1:N, Ibsup, 1:N,col = "125")
segments(Ibinf, 1:N, Ibsup, 1:N,col = "0837")
segments(Ibinf, 1:N, Ibsup, 1:N,col = "08383648297")
segments(Ibinf, 1:N, Ibsup, 1:N,col = "982864924")
segments(Ibinf, 1:N, Ibsup, 1:N,col = "0938238747982864924")
segments(Ibinf, 1:N, Ibsup, 1:N,col = "")
segments(Ibinf, 1:N, Ibsup, 1:N)
Ibinf<-Xbar-quantile(1.8)*s/sqrt(n)
Ibinf<-Xbar-1.8*s/sqrt(n)
a<-0.09
Ibinf<-Xbar-qnorm((1-a)/2)*s/sqrt(n)
Ibinf<-Xbar-qnorm((1-a)/2)*s/sqrt(n)
Ibsup<-Xbar+qnorm((1-a)/2)*s/sqrt(n)
sum((m>Ibinf)&(m<Ibsup))
Ibinf<-Xbar+qnorm((1-a)/2)*s/sqrt(n)
Ibsup<-Xbar-qnorm((1-a)/2)*s/sqrt(n)
sum((m>Ibinf)&(m<Ibsup))
sum((m>Ibinf)&(m<Ibsup))/N
Ibinf<-Xbar+qnorm(1-a/2)*s/sqrt(n)
Ibsup<-Xbar-qnorm(1-a/2)*s/sqrt(n)
sum((m>Ibinf)&(m<Ibsup))
sum((m>Ibinf)&(m<Ibsup))/N
#1
m<-2; s<-1
n<-100; N<-200
X<-matrix(rnorm(n*N,m,s),n,N)
#2
Xbar<-colSums(X/n)
plot(Xbar, 1:N, xlim=c(1,3), main ="")
#3
Ibinf<-Xbar-1.96*s/sqrt(n)
#4
Ibsup<-Xbar+1.96*s/sqrt(n)
#5
sum((m>Ibinf)&(m<Ibsup))
#Le nombre d'échantillon tel que l'intervalle de confiance contient l'espérance
#6
sum((m>Ibinf)&(m<Ibsup))/N
#La proportion d'intervalle de confiance contenant la valeur de l'espérance de 97%
#7
segments(Ibinf, 1:N, Ibsup, 1:N)
#8
a<-0.09
Ibinf2<-Xbar+qnorm(1-a/2)*s/sqrt(n)
Ibsup2<-Xbar-qnorm(1-a/2)*s/sqrt(n)
sum((m>Ibinf)&(m<Ibsup))
sum((m>Ibinf)&(m<Ibsup))/N
sum((m>Ibinf2)&(m<Ibsup2))
sum((m>Ibinf2)&(m<Ibsup2))/N
Ibinf2<-Xbar-qnorm(1-a/2)*s/sqrt(n)
Ibsup2<-Xbar+qnorm(1-a/2)*s/sqrt(n)
sum((m>Ibinf2)&(m<Ibsup2))
sum((m>Ibinf2)&(m<Ibsup2))/N
#1
m<-2; s<-1
n<-100; N<-200
X<-matrix(rnorm(n*N,m,s),n,N)
#2
Xbar<-colSums(X/n)
plot(Xbar, 1:N, xlim=c(1,3), main ="")
#3
Ibinf<-Xbar-1.96*s/sqrt(n)
#4
Ibsup<-Xbar+1.96*s/sqrt(n)
#5
sum((m>Ibinf)&(m<Ibsup))
#Le nombre d'échantillon tel que l'intervalle de confiance contient l'espérance
#6
sum((m>Ibinf)&(m<Ibsup))/N
#La proportion d'intervalle de confiance contenant la valeur de l'espérance de 97%
#7
segments(Ibinf, 1:N, Ibsup, 1:N)
#8
a<-0.09
Ibinf2<-Xbar-qnorm(1-a/2)*s/sqrt(n)
Ibsup2<-Xbar+qnorm(1-a/2)*s/sqrt(n)
sum((m>Ibinf2)&(m<Ibsup2))
sum((m>Ibinf2)&(m<Ibsup2))/N
a<-0.5
Ibinf2<-Xbar-qnorm(1-a/2)*s/sqrt(n)
Ibsup2<-Xbar+qnorm(1-a/2)*s/sqrt(n)
sum((m>Ibinf2)&(m<Ibsup2))
sum((m>Ibinf2)&(m<Ibsup2))/N
segments(Ibinf2, 1:N, Ibsup2, 1:N)
f<-1000
X2<-matrix(rnorm(f*N,m,s),f,N)
a<-0.05
Z<-qnorm(1-a/2)
segments(Ibinf2, 1:N, Ibsup2, 1:N)
prix1<-c(42.7,42.6,43,43.5,42.8,42.1,43.6,42.9,41.6,42.8,42.9,43.2,42.6,43.1,43.1)
hist(prix)
hist(prix1)
boxplot(prix1)
saphiro.test(prix1)
shapiro.test(prix1)
t.test(prix1, mu=43,alternative = "two.sided")
test<-t.test(prix1, mu=43, alternative = "test.sided")
test<-t.test(prix1, mu=43, alternative = "two.sided")
test$p.value;test$conf.int;test$estimate;test$null.value:test$alternative;test$method
test$p.value;test$conf.int;test$estimate;test$null.value;test$alternative;test$method
test$estimate
test$conf.int
test<-t.test(prix1, mu=43, alternative = "two.sided", conf.level=0.9)
test<-t.test(prix1, mu=43, alternative = "two.sided", conf.level=0.9)$conf.int
prix2<-c(40.9,43.4,42.2,41.6,42.9,40.8,42.5,41.6,40.4,42.5,41.1,41.8,43.3,43.4)
boxplot(prix2)
boxplot(prix1,prix2)
var.test(prix1,prix2)
var.test(prix1,prix2,alternative = "greater",var.equal=FALSE)
prix2<-c(40.9,43.4,42.2,41.6,42.9,40.8,42.5,41.6,40.4,42.5,41.1,41.8,43.3,43.4,43.4)
#b
boxplot(prix1,prix2)
#c
var.test(prix1,prix2,alternative = "greater",var.equal=FALSE)
var.test(prix1,prix2)
#d
var.test(prix1,prix2,alternative = "greater",var.equal=FALSE)
t.test(prix1,prix2,alternative = "greater",var.equal=FALSE)
X<-airquality
X
X<-airquality
Xbar<-colSums(X/n)
plot(Xbar, 1:N, xlim=c(1,3), main ="")
N<-153
Xbar<-colSums(X/n)
plot(Xbar, 1:N, xlim=c(1,3), main ="")
N<-0
m<-2; s<-1
n<-100; N<-200
X<-matrix(rnorm(n*N,m,s),n,N)
#2
Xbar<-colSums(X/n)
plot(Xbar, 1:N, xlim=c(1,3), main ="")
#1
X<-airquality
Xbar<-colSums(X/n)
summary(airquality)
m<-2; s<-1
n<-100; N<-200
X<-matrix(rnorm(n*N,m,s),n,N)
X
View(X)
summary(airquality)
norm(airquality)
NORM(airquality)
X<-airquality
X
X<-airquality
n<-30; N<-5
Xbar<-colSums(X/n)
plot(Xbar, 1:N, xlim=c(1,3), main ="")
summary(airquality)
View(X)
culSums
Xbar<-colSums(X/n)
Xbar-1.9*s/sqrt(n)
m<-2; s<-1
n<-100; N<-200
X<-matrix(rnorm(n*N,m,s),n,N)
#2
Xbar<-colSums(X/n)
plot(Xbar, 1:N, xlim=c(1,3), main ="")
#3
Ibinf<-Xbar-1.96*s/sqrt(n)
Ibinf
sd(airquality)<-s
sd(airquality)
mean(airquality)
mean(airquality$Wind)
X<-airquality
n<-30; N<-5
mean(airquality$Wind)
sqrt(airquality$Wind)
Xbar<-colSums(X/n)
Xbar-1.9*s/sqrt(n)
#6
setwd("~/Documents/Cours/L2/Semestre 2 /Logiciel R/TP1")
films<-read.table("films.txt",header = T,sep = ";")
attach(films)
#1
sd(rating)
#2
power.t.test(power=0.9,delta = 0.5,sd=1.551333,sig.level = 0.01,type="one.sample",
alternative = "two.sided")
#Il suffit d'avoir un echantillon de 146.5699, soit 147 films
#3
power.t.test(power=0.9, delta = 0.5 ,sd=1.551333,sig.level = 0.01,type="two.sample",
alternative = "two.sided")
#Un echantillon de 289 films est necessaire pour avoir un ecart de note de 0.5.
#4
sum(budget<100000&rating>8)
# 103 films on une note superieur ou egale a 8 avec un budget inferieur a 100 000
#dollars
sum(budget<100000)
binom.test(94,364,0.07,alternative="less")
#On rejette l’hypothèse nulle donc on considère l’alternative vraie.
#5
power.prop.test(n =400, p2=0.07, power =0.9)
#Au seuil de 7%, dans un échantillon de taille 400, l’écart par rapport à 0.07
#détectable dans 90% des cas est de 0.22.
#6
power.prop.test(n =400, p2=0.07, power =0.9, type="tow.sided")
grosbudget<-film$budget<100000
grosbudget<-films$budget<100000
grosbudget<-films$budget>100000
petitbudget<-films$budget<100000
t.test(grosbudget,petitbudget)
power.prop.test(n =400, p2=0.07, power =0.9, type="two.sample")
t.test(grosbudget,petitbudget, type="two.sample")
m<-2; s<-1
n<-100; N<-200
X<-matrix(rnorm(n*N,m,s),n,N)
#2
Xbar<-colSums(X/n)
plot(Xbar, 1:N, xlim=c(1,3), main ="")
#3
Ibinf<-Xbar-1.96*s/sqrt(n)
#4
Ibsup<-Xbar+1.96*s/sqrt(n)
#5
sum((m>Ibinf)&(m<Ibsup))
segments(Ibinf, 1:N, Ibsup, 1:N)
sum((m>Ibinf)&(m<Ibsup))/N
abline(V=2,col="red")
abline(v=2,col="red")
boxplot(prix1)
boxplot(prix1)
prix1<-c(42.7,42.6,43,43.5,42.8,42.1,43.6,42.9,41.6,42.8,42.9,43.2,42.6,43.1,43.1)
#2
hist(prix1)
boxplot(prix1)
shapiro.test(prix1)
test<-t.test(prix1, mu=43, alternative = "two.sided")
t.test(prix1, mu=43,alternative = "two.sided")
prix2<-c(40.9,43.4,42.2,41.6,42.9,40.8,42.5,41.6,40.4,42.5,41.1,41.8,43.3,43.4,43.4)
sum(prix2)
sum(prix2)/15
prix2<-c(40.9,43.4,42.2,41.6,42.9,40.8,42.5,41.6,40.4,42.5,41.1,41.8,43.3,43.4,43.4)
